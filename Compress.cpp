#include <string>
#include <stdexcept>
#include <iostream>
#include <iomanip>
#include <sstream>
#include <string.h>

#include <zlib.h>
#include <zstd.h>

#include "Compress.h"

static unsigned char dictionary[] = {
  0x37, 0xa4, 0x30, 0xec, 0xa8, 0x45, 0x98, 0x38, 0x25, 0x10, 0xd8, 0xda,
  0x06, 0x0c, 0xc3, 0x30, 0x0c, 0x83, 0x37, 0x8a, 0x36, 0x6a, 0xe7, 0x26,
  0x22, 0x8c, 0x08, 0x69, 0x2c, 0xae, 0xc3, 0x1a, 0x78, 0xd2, 0xe8, 0xdd,
  0xdd, 0x52, 0x4a, 0x29, 0xcd, 0x14, 0x48, 0x93, 0x24, 0x40, 0x33, 0x04,
  0x28, 0x1c, 0x16, 0x0d, 0xc9, 0x46, 0x42, 0x59, 0xa7, 0x06, 0x00, 0x24,
  0x80, 0x81, 0x03, 0x05, 0x02, 0x8e, 0x8d, 0x1d, 0x13, 0x05, 0x13, 0x89,
  0x8b, 0x08, 0xc6, 0x83, 0xd1, 0x28, 0x10, 0x06, 0x13, 0x43, 0x83, 0x81,
  0x28, 0x8a, 0xe2, 0x20, 0x88, 0xa3, 0x68, 0x84, 0xc4, 0x50, 0x8c, 0x39,
  0x89, 0x95, 0x24, 0x49, 0x07, 0x04, 0x16, 0xae, 0x14, 0x34, 0x84, 0x10,
  0x62, 0x88, 0x88, 0x88, 0x8c, 0xc8, 0x88, 0x88, 0x48, 0x92, 0x24, 0xe9,
  0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x2c, 0x5b, 0x5d, 0x5d, 0x2c, 0x22, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x22,
  0x3a, 0x5b, 0x5d, 0x7d, 0x2c, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65,
  0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a, 0x31, 0x33, 0x2c,
  0x22, 0x74, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x31, 0x30, 0x2c,
  0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22,
  0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x30,
  0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x31, 0x7d, 0x5d, 0x2c,
  0x5b, 0x7b, 0x22, 0x74, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a,
  0x33, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c,
  0x7b, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
  0x3a, 0x32, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x32, 0x7d,
  0x2c, 0x7b, 0x22, 0x63, 0x69, 0x72, 0x3a, 0x32, 0x2c, 0x22, 0x74, 0x79,
  0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x37, 0x2c, 0x22, 0x6c,
  0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a,
  0x33, 0x33, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x7b, 0x22, 0x63, 0x6f,
  0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x35,
  0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b,
  0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
  0x22, 0x3a, 0x31, 0x32, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22,
  0x3a, 0x31, 0x31, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30,
  0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
  0x6e, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
  0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a, 0x33, 0x2c, 0x22, 0x74, 0x79,
  0x62, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x3a,
  0x36, 0x35, 0x35, 0x33, 0x36, 0x30, 0x30, 0x2c, 0x22, 0x63, 0x69, 0x72,
  0x63, 0x75, 0x69, 0x74, 0x22, 0x3a, 0x7b, 0x22, 0x65, 0x6c, 0x65, 0x6d,
  0x65, 0x6e, 0x74, 0x73, 0x22, 0x3a, 0x5b, 0x5b, 0x7b, 0x22, 0x63, 0x6f,
  0x6e, 0x6e, 0x31, 0x36, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a,
  0x33, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
  0x6f, 0x6e, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65, 0x6c,
  0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a, 0x32, 0x37, 0x2c, 0x22,
  0x74, 0x79, 0x70, 0x65, 0x75, 0x6c, 0x6c, 0x2c, 0x7b, 0x22, 0x62, 0x65,
  0x73, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x3a, 0x30, 0x2c,
  0x22, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x22, 0x3a, 0x7b, 0x22,
  0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x3a, 0x5b, 0x5b,
  0x7b, 0x22, 0x64, 0x69, 0x72, 0x65, 0x30, 0x7d, 0x5d, 0x5d, 0x2c, 0x22,
  0x73, 0x69, 0x67, 0x6e, 0x73, 0x22, 0x3a, 0x5b, 0x5d, 0x7d, 0x2c, 0x22,
  0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x34,
  0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65,
  0x78, 0x22, 0x3a, 0x34, 0x2c, 0x22, 0x74, 0x79, 0x3a, 0x30, 0x7d, 0x2c,
  0x7b, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
  0x3a, 0x30, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e,
  0x64, 0x65, 0x78, 0x22, 0x3a, 0x37, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65,
  0x22, 0x3a, 0x33, 0x7d, 0x2c, 0x7b, 0x22, 0x63, 0x69, 0x72, 0x7d, 0x2c,
  0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
  0x73, 0x22, 0x3a, 0x32, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a,
  0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
  0x6f, 0x6e, 0x22, 0x3a, 0x32, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65, 0x6c,
  0x2c, 0x5b, 0x5d, 0x5d, 0x2c, 0x22, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x22,
  0x3a, 0x5b, 0x5d, 0x7d, 0x2c, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x35, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65,
  0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a, 0x32, 0x2c, 0x22,
  0x74, 0x79, 0x3a, 0x34, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a,
  0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
  0x6f, 0x6e, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65, 0x6c,
  0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a, 0x32, 0x33, 0x2c, 0x22,
  0x74, 0x79, 0x70, 0x65, 0x7b, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x37, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65,
  0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a, 0x31, 0x39, 0x2c,
  0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x33, 0x7d, 0x5d, 0x2c, 0x5b,
  0x7b, 0x22, 0x63, 0x7d, 0x2c, 0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
  0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x39, 0x2c, 0x22, 0x74,
  0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69,
  0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x34, 0x2c, 0x22,
  0x6c, 0x65, 0x76, 0x65, 0x6c, 0x70, 0x6f, 0x73, 0x2e, 0x79, 0x22, 0x3a,
  0x33, 0x37, 0x2c, 0x22, 0x74, 0x65, 0x78, 0x74, 0x22, 0x3a, 0x22, 0x30,
  0x2d, 0x32, 0x30, 0x5c, 0x6e, 0x32, 0x30, 0x2d, 0x34, 0x30, 0x5c, 0x6e,
  0x34, 0x30, 0x2d, 0x36, 0x30, 0x5c, 0x6e, 0x36, 0x30, 0x2d, 0x38, 0x30,
  0x5c, 0x6e, 0x38, 0x30, 0x2d, 0x31, 0x30, 0x31, 0x31, 0x2c, 0x22, 0x74,
  0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69,
  0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x30, 0x2c, 0x22,
  0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
  0x3a, 0x32, 0x31, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x2c, 0x5b, 0x7b,
  0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x34, 0x7d, 0x2c, 0x7b, 0x22,
  0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x31,
  0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65,
  0x78, 0x22, 0x3a, 0x32, 0x30, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x70,
  0x6f, 0x73, 0x2e, 0x78, 0x22, 0x3a, 0x34, 0x35, 0x2c, 0x22, 0x70, 0x6f,
  0x73, 0x2e, 0x79, 0x22, 0x3a, 0x36, 0x32, 0x2c, 0x22, 0x74, 0x65, 0x78,
  0x74, 0x22, 0x3a, 0x22, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20,
  0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x3a, 0x5c, 0x6e, 0x69, 0x66, 0x20,
  0x67, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65,
  0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a, 0x31, 0x36, 0x2c,
  0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x33, 0x7d, 0x2c, 0x7b, 0x22,
  0x64, 0x69, 0x72, 0x3a, 0x32, 0x7d, 0x5d, 0x2c, 0x5b, 0x5d, 0x5d, 0x2c,
  0x22, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x22, 0x3a, 0x5b, 0x7b, 0x22, 0x64,
  0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x31, 0x2c,
  0x22, 0x70, 0x6f, 0x73, 0x2e, 0x78, 0x22, 0x3a, 0x32, 0x38, 0x37, 0x2c,
  0x22, 0x70, 0x6f, 0x73, 0x2e, 0x22, 0x3a, 0x34, 0x7d, 0x2c, 0x7b, 0x22,
  0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x34, 0x7d, 0x2c, 0x7b, 0x22, 0x64,
  0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x30, 0x2c,
  0x22, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
  0x22, 0x3a, 0x37, 0x2c, 0x22, 0x74, 0x79, 0x5c, 0x6e, 0x62, 0x72, 0x6f,
  0x77, 0x6e, 0x20, 0x3d, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
  0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
  0x6e, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x70, 0x6f, 0x73, 0x2e, 0x78, 0x22,
  0x3a, 0x30, 0x2c, 0x22, 0x70, 0x6f, 0x73, 0x2e, 0x79, 0x30, 0x7d, 0x5d,
  0x2c, 0x5b, 0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
  0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x38, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65,
  0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63,
  0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x35, 0x2c, 0x22, 0x74, 0x79, 0x30,
  0x7d, 0x5d, 0x2c, 0x5b, 0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
  0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x35, 0x2c, 0x22, 0x74, 0x79,
  0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x37, 0x2c, 0x22, 0x74,
  0x79, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x5d, 0x5d,
  0x2c, 0x22, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x22, 0x3a, 0x5b, 0x5d, 0x7d,
  0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73,
  0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x33, 0x32, 0x7d, 0x2c, 0x6e, 0x75, 0x6c,
  0x6c, 0x2c, 0x7b, 0x3a, 0x39, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22,
  0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65,
  0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a, 0x31, 0x35, 0x2c,
  0x22, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x73, 0x22, 0x3a, 0x32, 0x2c, 0x22,
  0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64,
  0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x30, 0x2c,
  0x22, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
  0x22, 0x3a, 0x31, 0x34, 0x2c, 0x22, 0x74, 0x63, 0x74, 0x69, 0x6f, 0x6e,
  0x73, 0x22, 0x3a, 0x37, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a,
  0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
  0x6f, 0x6e, 0x22, 0x3a, 0x36, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22,
  0x3a, 0x31, 0x7d, 0x2c, 0x7b, 0x22, 0x74, 0x79, 0x70, 0x22, 0x3a, 0x31,
  0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65,
  0x78, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a,
  0x33, 0x7d, 0x5d, 0x2c, 0x5b, 0x7b, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63,
  0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x34, 0x2c, 0x22, 0x74, 0x79, 0x74,
  0x79, 0x70, 0x65, 0x22, 0x3a, 0x34, 0x7d, 0x2c, 0x7b, 0x22, 0x74, 0x79,
  0x70, 0x65, 0x22, 0x3a, 0x34, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x32, 0x2c, 0x22, 0x74,
  0x79, 0x70, 0x65, 0x22, 0x3a, 0x32, 0x7d, 0x2c, 0x7b, 0x22, 0x74, 0x79,
  0x70, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x33, 0x2c, 0x22, 0x6c, 0x65, 0x76,
  0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a, 0x38, 0x2c,
  0x22, 0x74, 0x79, 0x2c, 0x22, 0x74, 0x65, 0x78, 0x74, 0x22, 0x3a, 0x22,
  0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x76, 0x65, 0x20, 0x64,
  0x65, 0x73, 0x69, 0x67, 0x6e, 0x2c, 0x5c, 0x6e, 0x73, 0x6c, 0x6f, 0x77,
  0x20, 0x6e, 0x65, 0x61, 0x72, 0x20, 0x35, 0x30, 0x22, 0x7d, 0x5d, 0x7d,
  0x2c, 0x22, 0x6c, 0x65, 0x76, 0x22, 0x3a, 0x33, 0x2c, 0x22, 0x70, 0x6f,
  0x73, 0x2e, 0x78, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x70, 0x6f, 0x73, 0x2e,
  0x79, 0x22, 0x3a, 0x34, 0x2c, 0x22, 0x74, 0x65, 0x78, 0x74, 0x22, 0x3a,
  0x22, 0x69, 0x66, 0x20, 0x70, 0x20, 0x3e, 0x20, 0x35, 0x30, 0x3a, 0x20,
  0x62, 0x72, 0x6f, 0x77, 0x6e, 0x20, 0x3d, 0x6e, 0x73, 0x22, 0x3a, 0x33,
  0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x5d, 0x5d,
  0x2c, 0x22, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x22, 0x3a, 0x5b, 0x5d, 0x7d,
  0x2c, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
  0x3a, 0x31, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x30, 0x7d, 0x5d,
  0x5d, 0x2c, 0x22, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x22, 0x3a, 0x5b, 0x5d,
  0x7d, 0x2c, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
  0x22, 0x3a, 0x30, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69,
  0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x74, 0x79, 0x69,
  0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x34, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65,
  0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
  0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x36, 0x2c, 0x22, 0x74,
  0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x63, 0x69,
  0x72, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x32, 0x2c, 0x22,
  0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64,
  0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x31, 0x2c,
  0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x31, 0x7d, 0x2c, 0x7b, 0x22,
  0x64, 0x69, 0x72, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x35,
  0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b,
  0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a,
  0x33, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x31, 0x7d, 0x5d,
  0x2c, 0x5b, 0x7b, 0x22, 0x63, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x6f,
  0x72, 0x65, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x63, 0x69, 0x72, 0x63, 0x75,
  0x69, 0x74, 0x22, 0x3a, 0x7b, 0x22, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
  0x74, 0x73, 0x22, 0x3a, 0x5b, 0x5b, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c, 0x5b,
  0x5d, 0x2c, 0x5b, 0x7b, 0x22, 0x74, 0x79, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c,
  0x5b, 0x5d, 0x2c, 0x5b, 0x5d, 0x5d, 0x2c, 0x22, 0x73, 0x69, 0x67, 0x6e,
  0x73, 0x22, 0x3a, 0x5b, 0x5d, 0x7d, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65,
  0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x33,
  0x32, 0x7d, 0x2c, 0x7b, 0x22, 0x62, 0x65, 0x73, 0x74, 0x31, 0x30, 0x30,
  0x2c, 0x22, 0x57, 0x46, 0x22, 0x3a, 0x34, 0x35, 0x7d, 0x2c, 0x7b, 0x22,
  0x45, 0x22, 0x3a, 0x31, 0x30, 0x30, 0x2c, 0x22, 0x53, 0x22, 0x3a, 0x39,
  0x32, 0x2c, 0x22, 0x53, 0x46, 0x22, 0x3a, 0x34, 0x38, 0x2c, 0x22, 0x57,
  0x22, 0x3a, 0x39, 0x32, 0x2c, 0x22, 0x57, 0x46, 0x22, 0x3a, 0x34, 0x2c,
  0x22, 0x57, 0x46, 0x22, 0x3a, 0x34, 0x35, 0x7d, 0x5d, 0x7d, 0x2c, 0x7b,
  0x22, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x3a, 0x5b, 0x7b, 0x22,
  0x53, 0x22, 0x3a, 0x35, 0x30, 0x2c, 0x22, 0x53, 0x46, 0x22, 0x3a, 0x34,
  0x38, 0x2c, 0x22, 0x57, 0x22, 0x3a, 0x31, 0x30, 0x30, 0x2c, 0x22, 0x57,
  0x46, 0x22, 0x3a, 0x34, 0x38, 0x2c, 0x22, 0x57, 0x46, 0x22, 0x3a, 0x34,
  0x35, 0x7d, 0x2c, 0x7b, 0x22, 0x53, 0x22, 0x3a, 0x31, 0x30, 0x30, 0x2c,
  0x22, 0x53, 0x46, 0x22, 0x3a, 0x34, 0x38, 0x2c, 0x22, 0x57, 0x22, 0x3a,
  0x37, 0x34, 0x2c, 0x22, 0x57, 0x46, 0x22, 0x3a, 0x34, 0x35, 0x7d, 0x5d,
  0x7d, 0x2c, 0x7b, 0x2c, 0x33, 0x2c, 0x33, 0x2c, 0x33, 0x2c, 0x33, 0x2c,
  0x36, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2c,
  0x30, 0x2c, 0x30, 0x2c, 0x36, 0x2c, 0x36, 0x2c, 0x34, 0x2c, 0x34, 0x2c,
  0x34, 0x2c, 0x34, 0x2c, 0x34, 0x2c, 0x34, 0x5d, 0x2c, 0x5b, 0x33, 0x2c,
  0x33, 0x2c, 0x33, 0x2c, 0x33, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38,
  0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38,
  0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38,
  0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x37, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c, 0x5b,
  0x5d, 0x2c, 0x5b, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38,
  0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x30, 0x2c, 0x38, 0x2c, 0x38,
  0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38,
  0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38,
  0x2c, 0x37, 0x2c, 0x38, 0x2c, 0x37, 0x5d, 0x2c, 0x5b, 0x38, 0x2c, 0x38,
  0x2c, 0x38, 0x2c, 0x30, 0x5d, 0x2c, 0x5b, 0x38, 0x2c, 0x38, 0x2c, 0x38,
  0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38,
  0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x37,
  0x2c, 0x38, 0x2c, 0x37, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38,
  0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x37, 0x5d, 0x2c, 0x5b, 0x38,
  0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38,
  0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38,
  0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x30, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38,
  0x2c, 0x3a, 0x5b, 0x5d, 0x7d, 0x2c, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63,
  0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x36, 0x2c, 0x22, 0x6c, 0x65, 0x76,
  0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a, 0x31, 0x2c,
  0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x33, 0x7d, 0x5d, 0x2c, 0x5b,
  0x7b, 0x22, 0x74, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x34, 0x7d, 0x2c,
  0x7b, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x34, 0x7d, 0x2c, 0x7b,
  0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a,
  0x32, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x32, 0x7d, 0x5d,
  0x2c, 0x5b, 0x7b, 0x22, 0x74, 0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
  0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x34, 0x2c, 0x22, 0x74,
  0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x63, 0x6f,
  0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x31,
  0x33, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x65, 0x63, 0x74, 0x69, 0x6f,
  0x6e, 0x22, 0x3a, 0x33, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a,
  0x32, 0x7d, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c, 0x5b, 0x5d,
  0x5d, 0x2c, 0x22, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x22, 0x3a, 0x5b, 0x5d,
  0x7d, 0x2c, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x74, 0x79, 0x70,
  0x65, 0x22, 0x3a, 0x34, 0x7d, 0x2c, 0x7b, 0x22, 0x63, 0x69, 0x72, 0x63,
  0x75, 0x69, 0x74, 0x22, 0x3a, 0x7b, 0x22, 0x65, 0x6c, 0x65, 0x6d, 0x65,
  0x6e, 0x74, 0x73, 0x22, 0x3a, 0x5b, 0x5b, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c,
  0x5b, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c, 0x5b, 0x7b, 0x22, 0x63, 0x6f, 0x2c,
  0x5b, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c,
  0x5b, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c, 0x5b, 0x5d, 0x5d, 0x2c, 0x22, 0x6c,
  0x65, 0x76, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
  0x22, 0x3a, 0x30, 0x2c, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x22,
  0x44, 0x30, 0x2c, 0x36, 0x2c, 0x30, 0x2c, 0x36, 0x2c, 0x30, 0x2c, 0x30,
  0x2c, 0x36, 0x2c, 0x30, 0x5d, 0x2c, 0x5b, 0x36, 0x2c, 0x36, 0x2c, 0x36,
  0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x36, 0x2c, 0x30, 0x2c, 0x36, 0x2c, 0x30,
  0x2c, 0x30, 0x2c, 0x36, 0x2c, 0x30, 0x5d, 0x2c, 0x5b, 0x30, 0x2c, 0x30,
  0x2c, 0x30, 0x2c, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x33,
  0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b,
  0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a,
  0x30, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x32, 0x7d, 0x2c,
  0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x33,
  0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x31, 0x7d, 0x2c, 0x7b,
  0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
  0x22, 0x3a, 0x39, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30,
  0x7d, 0x2c, 0x7b, 0x22, 0x74, 0x79, 0x70, 0x22, 0x72, 0x65, 0x73, 0x65,
  0x74, 0x22, 0x3a, 0x31, 0x7d, 0x5d, 0x7d, 0x2c, 0x6e, 0x75, 0x6c, 0x6c,
  0x2c, 0x6e, 0x75, 0x6c, 0x6c, 0x2c, 0x7b, 0x22, 0x62, 0x65, 0x73, 0x74,
  0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x3a, 0x36, 0x35, 0x35, 0x33,
  0x36, 0x30, 0x30, 0x2c, 0x22, 0x63, 0x69, 0x72, 0x63, 0x2c, 0x5b, 0x5d,
  0x2c, 0x5b, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c, 0x5b, 0x5d,
  0x2c, 0x5b, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c, 0x5b, 0x5d,
  0x2c, 0x5b, 0x5d, 0x5d, 0x2c, 0x22, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x62,
  0x67, 0x22, 0x3a, 0x5b, 0x5b, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c, 0x5b, 0x73,
  0x22, 0x3a, 0x5b, 0x31, 0x2c, 0x30, 0x2c, 0x32, 0x2c, 0x33, 0x5d, 0x2c,
  0x22, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
  0x65, 0x6e, 0x74, 0x73, 0x22, 0x3a, 0x5b, 0x5d, 0x2c, 0x22, 0x69, 0x63,
  0x6f, 0x6e, 0x22, 0x3a, 0x5b, 0x5b, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2c,
  0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x37, 0x2c, 0x22, 0x74, 0x79, 0x70,
  0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72, 0x65,
  0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x35, 0x2c, 0x22, 0x6c, 0x65,
  0x76, 0x65, 0x6c, 0x2c, 0x6e, 0x75, 0x6c, 0x6c, 0x2c, 0x6e, 0x75, 0x6c,
  0x6c, 0x2c, 0x6e, 0x75, 0x6c, 0x6c, 0x2c, 0x6e, 0x75, 0x6c, 0x6c, 0x2c,
  0x6e, 0x75, 0x6c, 0x6c, 0x2c, 0x6e, 0x75, 0x6c, 0x6c, 0x2c, 0x6e, 0x75,
  0x6c, 0x6c, 0x2c, 0x6e, 0x75, 0x6c, 0x6c, 0x2c, 0x6e, 0x75, 0x6c, 0x6c,
  0x2c, 0x7b, 0x22, 0x62, 0x65, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x44,
  0x69, 0x66, 0x66, 0x22, 0x2c, 0x22, 0x73, 0x75, 0x62, 0x73, 0x74, 0x65,
  0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3a, 0x31, 0x30, 0x30,
  0x30, 0x30, 0x2c, 0x22, 0x74, 0x65, 0x73, 0x74, 0x73, 0x22, 0x3a, 0x5b,
  0x7b, 0x22, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
  0x3a, 0x31, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d,
  0x5d, 0x5d, 0x2c, 0x22, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x22, 0x3a, 0x5b,
  0x5d, 0x7d, 0x2c, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
  0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x5b, 0x30, 0x2c, 0x31, 0x7d, 0x2c, 0x7b,
  0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a,
  0x31, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x31, 0x7d, 0x2c,
  0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
  0x73, 0x22, 0x3a, 0x37, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x69,
  0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x31, 0x34, 0x2c, 0x22, 0x74, 0x79, 0x70,
  0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72, 0x65,
  0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x33, 0x2c, 0x22, 0x74, 0x79,
  0x6e, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a,
  0x31, 0x7d, 0x2c, 0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x36, 0x2c, 0x22, 0x74, 0x79, 0x70,
  0x65, 0x22, 0x3a, 0x30, 0x7d, 0x5d, 0x2c, 0x5b, 0x7b, 0x22, 0x74, 0x79,
  0x70, 0x65, 0x30, 0x2c, 0x22, 0x53, 0x46, 0x22, 0x3a, 0x30, 0x2c, 0x22,
  0x57, 0x22, 0x3a, 0x35, 0x30, 0x2c, 0x22, 0x57, 0x46, 0x22, 0x3a, 0x30,
  0x7d, 0x5d, 0x2c, 0x22, 0x74, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x64,
  0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x30, 0x7d,
  0x2c, 0x7b, 0x22, 0x70, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x70, 0x6f,
  0x69, 0x6e, 0x74, 0x73, 0x22, 0x3a, 0x5b, 0x7b, 0x22, 0x45, 0x46, 0x22,
  0x3a, 0x30, 0x2c, 0x22, 0x4e, 0x46, 0x22, 0x3a, 0x35, 0x30, 0x2c, 0x22,
  0x53, 0x46, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x57, 0x22, 0x3a, 0x35, 0x30,
  0x2c, 0x22, 0x57, 0x46, 0x22, 0x3a, 0x36, 0x2c, 0x36, 0x2c, 0x36, 0x2c,
  0x36, 0x2c, 0x36, 0x2c, 0x36, 0x2c, 0x37, 0x5d, 0x2c, 0x5b, 0x38, 0x2c,
  0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x37, 0x2c,
  0x37, 0x2c, 0x37, 0x2c, 0x37, 0x2c, 0x37, 0x2c, 0x31, 0x2c, 0x31, 0x2c,
  0x37, 0x2c, 0x37, 0x5d, 0x2c, 0x5b, 0x38, 0x2c, 0x36, 0x2c, 0x30, 0x2c,
  0x30, 0x2c, 0x30, 0x2c, 0x36, 0x2c, 0x36, 0x2c, 0x36, 0x2c, 0x30, 0x2c,
  0x30, 0x2c, 0x30, 0x2c, 0x36, 0x2c, 0x37, 0x5d, 0x2c, 0x5b, 0x38, 0x2c,
  0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x38, 0x2c, 0x37, 0x2c, 0x36, 0x2c,
  0x30, 0x2c, 0x30, 0x2c, 0x36, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x69, 0x6e,
  0x64, 0x65, 0x78, 0x22, 0x3a, 0x31, 0x36, 0x2c, 0x22, 0x74, 0x79, 0x70,
  0x65, 0x22, 0x3a, 0x33, 0x7d, 0x5d, 0x2c, 0x5b, 0x5d, 0x2c, 0x5b, 0x5d,
  0x2c, 0x5b, 0x5d, 0x5d, 0x2c, 0x22, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x22,
  0x3a, 0x5b, 0x5d, 0x7d, 0x2c, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
  0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x74,
  0x79, 0x70, 0x65, 0x22, 0x3a, 0x32, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69,
  0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x32, 0x2c, 0x22,
  0x74, 0x79, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x53, 0x46, 0x22, 0x3a,
  0x30, 0x2c, 0x22, 0x57, 0x46, 0x22, 0x3a, 0x30, 0x7d, 0x5d, 0x2c, 0x22,
  0x72, 0x65, 0x73, 0x65, 0x74, 0x22, 0x3a, 0x31, 0x7d, 0x2c, 0x7b, 0x22,
  0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x6d, 0x70, 0x6f, 0x69,
  0x6e, 0x74, 0x22, 0x3a, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x3a, 0x31, 0x2c,
  0x22, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x3a, 0x5b, 0x7b, 0x22,
  0x53, 0x46, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x57, 0x46, 0x22, 0x3a, 0x30,
  0x7d, 0x2c, 0x7b, 0x22, 0x45, 0x22, 0x3a, 0x31, 0x30, 0x30, 0x2c, 0x22,
  0x53, 0x46, 0x22, 0x3a, 0x30, 0x2c, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30,
  0x2c, 0x30, 0x2c, 0x30, 0x5d, 0x2c, 0x5b, 0x30, 0x2c, 0x36, 0x2c, 0x36,
  0x2c, 0x36, 0x2c, 0x30, 0x2c, 0x36, 0x2c, 0x36, 0x2c, 0x36, 0x2c, 0x30,
  0x2c, 0x36, 0x2c, 0x36, 0x2c, 0x36, 0x5d, 0x2c, 0x5b, 0x30, 0x2c, 0x36,
  0x2c, 0x30, 0x2c, 0x36, 0x2c, 0x30, 0x2c, 0x36, 0x30, 0x7d, 0x2c, 0x7b,
  0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a,
  0x30, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64,
  0x65, 0x78, 0x22, 0x3a, 0x34, 0x33, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65,
  0x22, 0x3a, 0x33, 0x7d, 0x2c, 0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x6c, 0x6c,
  0x2c, 0x7b, 0x22, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72,
  0x65, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69,
  0x74, 0x22, 0x3a, 0x7b, 0x22, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
  0x73, 0x22, 0x3a, 0x5b, 0x5b, 0x7b, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22,
  0x22, 0x3a, 0x30, 0x7d, 0x5d, 0x5d, 0x2c, 0x22, 0x73, 0x69, 0x67, 0x6e,
  0x73, 0x22, 0x3a, 0x5b, 0x5d, 0x7d, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65,
  0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x33,
  0x32, 0x7d, 0x2c, 0x6e, 0x75, 0x6c, 0x6c, 0x2c, 0x6e, 0x75, 0x6c, 0x6c,
  0x2c, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x35, 0x2c, 0x22,
  0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x63,
  0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a,
  0x39, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c,
  0x7b, 0x22, 0x74, 0x79, 0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
  0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x33, 0x2c, 0x22, 0x74, 0x79,
  0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x63, 0x6f, 0x6e,
  0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x32, 0x2c,
  0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x36,
  0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x31, 0x7d, 0x2c, 0x7b,
  0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
  0x22, 0x3a, 0x31, 0x30, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a,
  0x30, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72, 0x22, 0x63, 0x6f, 0x6e,
  0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x31, 0x31,
  0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x7b,
  0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
  0x22, 0x3a, 0x39, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x22, 0x3a,
  0x34, 0x7d, 0x2c, 0x7b, 0x22, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
  0x6f, 0x6e, 0x22, 0x3a, 0x37, 0x2c, 0x22, 0x6c, 0x65, 0x76, 0x65, 0x6c,
  0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x74,
  0x79, 0x70, 0x65, 0x22, 0x3a, 0x33, 0x7d, 0x5d, 0x2c, 0x5b, 0x7b, 0x22,
  0x22, 0x3a, 0x34, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30,
  0x7d, 0x2c, 0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
  0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x34, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65,
  0x22, 0x3a, 0x30, 0x7d, 0x5d, 0x2c, 0x5b, 0x7b, 0x22, 0x63, 0x6f, 0x6e,
  0x6e, 0x65, 0x22, 0x3a, 0x34, 0x7d, 0x2c, 0x7b, 0x22, 0x74, 0x79, 0x70,
  0x65, 0x22, 0x3a, 0x34, 0x7d, 0x2c, 0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x6e,
  0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x38, 0x2c, 0x22,
  0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x30, 0x7d, 0x5d, 0x2c, 0x5b, 0x7b,
  0x22, 0x74, 0x79, 0x70
};
static unsigned int dictionary_len = 4492;



std::string compress_string_zlib(const std::string& str)
{
    if (str.empty())
        return "";
    z_stream zs;                        // z_stream is zlib's control structure
    memset(&zs, 0, sizeof(zs));
    zs.zalloc = Z_NULL;
    zs.zfree = Z_NULL;

    if (deflateInit(&zs, Z_BEST_COMPRESSION) != Z_OK)
        throw(std::runtime_error("deflateInit failed while compressing."));

    zs.next_in = (Bytef*)str.data();
    zs.avail_in = str.size();           // set the z_stream's input

    int ret;
    char outbuffer[32768];
    std::string outstring;

    // retrieve the compressed bytes blockwise
    do {
        zs.next_out = reinterpret_cast<Bytef*>(outbuffer);
        zs.avail_out = sizeof(outbuffer);

        ret = deflate(&zs, Z_FINISH);

        if (outstring.size() < zs.total_out) {
            // append the block to the output string
            outstring.append(outbuffer,
                             zs.total_out - outstring.size());
        }
    } while (ret == Z_OK);

    deflateEnd(&zs);

    if (ret != Z_STREAM_END) {          // an error occurred that was not EOF
        std::ostringstream oss;
        oss << "ERROR zlib compress: " << ret << " " << zs.msg;
        throw(std::runtime_error(oss.str()));
    }

    return outstring;
}

std::string decompress_string_zlib(const std::string& str)
{
    if (str.empty())
        return "";
    z_stream zs;                        // z_stream is zlib's control structure
    memset(&zs, 0, sizeof(zs));

    if (inflateInit(&zs) != Z_OK)
        throw(std::runtime_error("inflateInit failed while decompressing."));

    zs.next_in = (Bytef*)str.data();
    zs.avail_in = str.size();

    int ret;
    char outbuffer[32768];
    std::string outstring;

    // get the decompressed bytes blockwise using repeated calls to inflate
    do {
        zs.next_out = reinterpret_cast<Bytef*>(outbuffer);
        zs.avail_out = sizeof(outbuffer);

        ret = inflate(&zs, 0);

        if (outstring.size() < zs.total_out) {
            outstring.append(outbuffer,
                             zs.total_out - outstring.size());
        }

    } while (ret == Z_OK);

    inflateEnd(&zs);

    if (ret != Z_STREAM_END) {          // an error occurred that was not EOF
        std::ostringstream oss;
        oss << "ERROR zlib decompress " << ret << " " << zs.msg;
        throw(std::runtime_error(oss.str()));
    }

    return outstring;
}

std::string compress_string_zstd(const std::string& str)
{
    size_t buf_size = ZSTD_compressBound(str.size());
    char* buf = (char*) malloc(buf_size);
    
    ZSTD_CCtx* const cctx = ZSTD_createCCtx();
    ZSTD_CDict* const cdict = ZSTD_createCDict(dictionary, dictionary_len, ZSTD_maxCLevel());
    
    size_t got_size = ZSTD_compress_usingCDict(cctx, buf, buf_size, str.c_str(), str.size(), cdict);
    std::string outstring;
    outstring.append(buf, got_size);
    ZSTD_freeCCtx(cctx);
    ZSTD_freeCDict(cdict);
    free(buf);

    return outstring;
}

std::string decompress_string_zstd(const std::string& str)
{
    unsigned long long buf_size = ZSTD_getFrameContentSize(str.c_str(), str.size());
    if (!buf_size || buf_size > 10000000)
        throw(std::runtime_error("ZSTD failed"));


    char* buf = (char*) malloc(buf_size);
    
    ZSTD_DCtx* const dctx = ZSTD_createDCtx();
    ZSTD_DDict* const ddict = ZSTD_createDDict(dictionary, dictionary_len);    
    
    size_t got_size = ZSTD_decompress_usingDDict(dctx, buf, buf_size, str.c_str(), str.size(), ddict);
    if (!got_size)
        throw(std::runtime_error("ZSTD failed"));
    if (got_size > 10000000)
        throw(std::runtime_error("ZSTD failed"));
        
    
    std::string outstring;
    outstring.append(buf, got_size);
    ZSTD_freeDCtx(dctx);
    ZSTD_freeDDict(ddict);
    free(buf);
    return outstring;
}

std::string decompress_string(const std::string& str)
{
    if (str[0] == 0x78)
        return decompress_string_zlib(str);
    return decompress_string_zstd(str);
}

std::string compress_string(const std::string& str)
{
    return compress_string_zstd(str);
}
